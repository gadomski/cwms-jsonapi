{"name":"cwms-jsonapi","tagline":"Documentation for a CWMS JSON API","body":"### Welcome to _a_ CWMS JSON API.\r\n\r\nThis is the documentation for _a_ (not _the_) JSON API for the [Corps Water Management System](https://cwms.usace.army.mil), or **CWMS**.\r\nThis is **not** the API code itself.\r\nAt the time of this writing, the API code is available only on the server located at `155.78.180.103` in the `cwmsweb` schema.\r\nThis document only describes the data provided by the API.\r\n\r\n### Schema\r\n\r\nAll data is received as JSON.\r\n\r\n```\r\n$ curl -i http://nae-rrs2.usace.army.mil:7777/pls/cwmsweb/jsonapi.locations?db_office_id=FOO\r\nHTTP/1.1 200 OK\r\nDate: Tue, 03 Jun 2014 20:09:24 GMT\r\nServer: Oracle-Application-Server-11g\r\nX-DB-Content-length: 2\r\nContent-Length: 2\r\nContent-Type: application/json\r\nContent-Language: en\r\n\r\n[]\r\n```\r\n\r\nBlank fields are included as `null` instead of being omitted.\r\n\r\nAll timestamps are returned in ISO 8601 format:\r\n\r\n```\r\nYYYY-MM-DDTHH:MM:SSZ\r\n```\r\n\r\n\r\n### URL Structure\r\n\r\nDue to the idiosyncrasies of [mod_plsql](http://docs.oracle.com/cd/B14099_19/web.1012/b14010/using.htm), **cwms-jsonapi** eschews traditional API behavior in favor of easy integration with existing PL/SQL web packages. Consequentially, an API call might look like:\r\n\r\n```\r\nhttp://nae-rrs2.usace.army.mil:7777/pls/cwmsweb/jsonapi.locations?db_office_id=NAE\r\n```\r\n\r\nWhere everything after `http://nae-rrs2.usace.army.mil:7777/pls/cwmsweb/jsonapi` is used to query the API. the `GET` parameters in the URL are passed as procedure arguments in the PL/SQL backend, so misspelling `GET` parameter names will produce `404` with error messages that look suspiciously internally generated (its because they are).\r\n\r\nIn this documentation, urls are listed with a dot, then the resource name, then the parameters, for example, if your base API url is `http://example.com/pls/cwmsweb/jsonapi`, then the URL for a list of locations would be:\r\n\r\n`.locations?db_office_id=MYOFFICE`\r\n\r\n\r\n### HTTP Verbs\r\n\r\nThe API only accepts `GET` requests.\r\n\r\n\r\n### Locations\r\n\r\n**Locations** are field sites that may contain one or more sensors, some of which may produce time series data. To get a list of locations, query:\r\n\r\n```\r\n.locations?db_office_id=OFFICE_ID\r\n```\r\n\r\n#### Parameters\r\n\r\nThis is a table:\r\n\r\nName | Type | Description\r\n-------------------------------------\r\ndb_office_id | string | Required: The office id, e.g. 'NAE'.\r\nunit_system | string | A given location usually has two database representations, one for each unit system ('SI' or 'EN'). Default: 'SI'.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}